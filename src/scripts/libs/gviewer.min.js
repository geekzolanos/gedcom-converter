var GedcomConst={VERSION:"1.0.1",QUERY_PARAM:"root",LANGUAGE:"en",indicator:{personne:"INDI",famille:"FAM",source:"SOUR",note:"NOTE",newLine:"CONT",append:"CONC"},logLevels:{DEBUG:0,INFO:1,WARN:2,ERROR:3},logLevel:3},GedcomToolbox={idSeed:100,id:function(prefix){return(prefix||"")+ ++this.idSeed},getQueryParameter:function(parameterName){var queryString=window.top.location.search.substring(1),parameterName=parameterName+"=";return queryString.length>0&&(begin=queryString.indexOf(parameterName),begin!=-1)?(begin+=parameterName.length,end=queryString.indexOf("&",begin),end==-1&&(end=queryString.length),unescape(queryString.substring(begin,end))):null}},log={debug:function(t){GedcomConst.logLevel<=GedcomConst.logLevels.DEBUG&&this.display(GedcomConst.logLevels.DEBUG,t)},info:function(t){GedcomConst.logLevel<=GedcomConst.logLevels.INFO&&this.display(GedcomConst.logLevels.INFO,t)},warn:function(t){GedcomConst.logLevel<=GedcomConst.logLevels.WARN&&this.display(GedcomConst.logLevels.WARN,t)},error:function(t,error){GedcomConst.logLevel<=GedcomConst.logLevels.ERROR&&this.display(GedcomConst.logLevels.ERROR,t),console.log(error)},display:function(level,t){if(GedcomConst.SHOW_LOG){var c="&#160;";if(null!=t){var lt,d=new Date,dts=[2,2,2,3],dt=[d.getHours(),d.getMinutes(),d.getSeconds(),d.getMilliseconds()].collect(function(v,i){return v=v.toString(),$R(v.length,dts[i],!0).collect(function(){return"0"}).join("")+v},this).join(":");switch(level){case GedcomConst.logLevels.DEBUG:lt="DEBUG";break;case GedcomConst.logLevels.INFO:lt="INFO";break;case GedcomConst.logLevels.WARN:lt="WARN";break;case GedcomConst.logLevels.ERROR:lt="ERROR"}c="["+dt+"]&#160;["+lt+"]&#160;"+t}$(GedcomConst.id.LOG_ID).appendChild(new Element("div").addClassName(lt).update(c))}}},GedcomLang={language:null,$:null,defs:{en:{common:{yes:"Yes",no:"No",when:"the",where:"at"},index:{close:"Close",history:"History",log:"Log",quickSelect:"Choose the person to display"},personne:{privacy:"Private data",sexe:{M:"",F:""}},viewer:{clicknavigate:"Click to focus on this person",dbclicknavigate:"Double-click to focus on this person",clickopen:"Click to open the person's detail",multipleNameSeparator:" or "},plugins:{helper:{source:{title:"Title",titleAbbr:"Short title",author:"Author",dateAndPlace:"Date and place of publication",text:"Text",notes:"Notes"},dateAndPlace:{address:"Address",age:"age",source:"Source",notes:"Notes",displayMap:"[Display on the map]",hideMap:"[Hide the map]"}},privacy:{title:"Restriction"},sexe:{title:"Sex",M:"Man",F:"Woman",U:"Unknown"},name:{title:"Name"},prenom:{title:"First name"},surn_prefix:{title:"Last name (prefix)"},nomjf:{title:"Last name"},name_suffix:{title:"Last name (suffix)"},nom:{title:"Common name"},nickname:{title:"Nickname"},birt:{title:"Birthday"},deat:{title:"Death"},burri:{title:"Burrial"},crem:{title:"Cremation"},prob:{title:"Validation of a will"},will:{title:"Will"},familleParent:{title:"Parents"},adop:{title:"Adoption"},nmr:{title:"Wedding count"},familles:{title:"Famillies",children:"Child(ren)",marriage:"Wedding"},familleParentChilds:{title:"Brothers and Sisters"},nchi:{title:"Children count"},even:{title:"Events"},dscr:{title:"Description"},cens:{title:"Census"},ssn:{title:"Social Security Number"},resi:{title:"Places of residence"},prop:{title:"Property and possessions"},grad:{title:"Graduates"},educ:{title:"Level of study"},occu:{title:"Occupations"},reti:{title:"Retreat"},nati:{title:"Nationality"},emig:{title:"Emigration"},immi:{title:"Immigration"},natu:{title:"Naturalization"},reli:{title:"Religion"},fcom:{title:"First Communion"},chr:{title:"Christening (child)"},chra:{title:"Christening (adult)"},bapt:{title:"Baptism"},conf:{title:"Confirmation"},bless:{title:"Religious blessing"},ordi:{title:"Religious sacrament"},ordn:{title:"Religious ordination"},barm:{title:"Bar mitzvah"},bars:{title:"Bas mitzvah"},bapl:{title:"Baptism<br/>(Mormon church)"},conl:{title:"Confirmation<br/>(Mormon church)"},endl:{title:"Dotation<br/>(Mormon church)"},slgc:{title:"Sealing of a child to his parents<br/>(Mormon church)"},slgs:{title:"Sealing of a husband and wife<br/>(Mormon church)"},cast:{title:"Cast or status"},titl:{title:"Title of nobility or honor"},sources:{title:"Sources"},notes:{title:"Notes"},obje:{title:"Documents"}}}},setLanguage:function(language){this.language=language,this.$=this.defs[language]}};GedcomLang.setLanguage(GedcomConst.LANGUAGE);var GedcomParser=Class.create();GedcomParser.prototype={DATAS:null,initialize:function(){},load:function(file){log.info(),log.info("Parser::Loading "+file),new Ajax.Request(file,{method:"GET",onSuccess:function(response){log.debug("loading ok"),this.parse(response.responseText)}.bind(this)})},node:function(type,value,level){return{value:value,type:type,level:level,childs:[]}},parse:function(gedcom){var lines=gedcom.match(/[^\r\n]+/g);log.debug(lines.length+" lines extracted");var data=this.node(null,null),parents=[data],_level=null;$A(lines).each(function(line,i){var current=this.extract(line,i);if(null!=current){if(null!=_level&&current.level<=_level&&$R(current.level,_level).each(function(){parents.pop()},this),parent=parents[parents.length-1],current.ident==GedcomConst.indicator.append||current.ident==GedcomConst.indicator.newLine){node=parent;var key=0==node.level?"text":"value",v=current.value||"";Object.isUndefined(node[key])?node[key]=v:node[key]+=(current.ident==GedcomConst.indicator.newLine?"<br/>":"")+v}else{var node=this.node(current.ident,current.value,current.level);parent.childs.push(node)}parents.push(node),_level=current.level}},this),this.analyze(data)},extract:function(line,i){var result=line.trim().match(/(\d) ([^ ]*) ?(.*)?/);return null==result?null:(result.shift(),result=result.compact(),{level:result[0],ident:result[1],value:result[2]})},getData:function(id){return this.DATAS.get(id)},analyze:function(data){log.info(),log.info("Parser::Extraction :"),this.DATAS=$H(),(data.childs||[]).each(function(child,i){try{var data=null;GedcomConst.indicator.personne==child.value?data=new Personne(child):GedcomConst.indicator.famille==child.value?data=new Famille(child):GedcomConst.indicator.source==child.value?data=new Source(child):GedcomConst.indicator.note==child.value?data=new Note(child):log.warn("Parser::analyze -> unknow -> "+child.type+(child.value?" ("+child.value+")":"")),data&&this.DATAS.set(child.type,data)}catch(e){log.error("Parser::analyze -> each",e)}},this),log.debug(this.DATAS.size()+" bloc chargés");var options=[];[GedcomConst.indicator.personne,GedcomConst.indicator.famille].each(function(type){try{log.debug("Parser::analyze -> inject for "+type),this.DATAS.each(function(pair){if(pair.value.type==type)try{Object.isFunction(pair.value.inject)&&pair.value.inject(this),pair.value.type==GedcomConst.indicator.personne&&pair.value.isPublic()&&options.push({text:pair.value.getDisplayName(GedcomLang.$.viewer.multipleNameSeparator),value:pair.value.id})}catch(e){log.error("Parser::analyze -> inject",e)}},this)}catch(e){log.error("Parser::inject -> each",e)}},this)}},GedcomParser.getChild=function(n,type,value){if(null==n)return null;var v=(n.childs||[]).find(function(c){return c.type==type});return v&&value&&(v=v.value),v},GedcomParser.getChilds=function(n,type,value){var res=[];return(n.childs||[]).each(function(c){c.type==type&&(value?res.push(c.value):res.push(c))}),res},GedcomParser.extractDateAndPlace=function(n){return null==n?null:{value:n.value,date:this.getChild(n,"DATE",!0),place:this.getChild(n,"PLAC",!0),address:this.getChild(n,"ADDR",!0),age:this.getChild(n,"AGE",!0),source:this.getChild(n,"SOUR",!0),notes:this.getChilds(n,"NOTE",!0)}};var GedcomPlugins={plugins:[],pluginsLoaded:$H(),pluginsRequired:$H(),setRequired:function(key){this.pluginsRequired.set(key,!0)},addPlugin:function(plugin){return this.pluginsLoaded.get(plugin.key)?void console.log("Plugins:: Plugin ["+plugin.key+"]"+plugin.name+" already loaded"):void(plugin.active&&(this.plugins.push(plugin),this.pluginsLoaded.set(plugin.key,!0)))},getPlugins:function(required){return this.plugins.filter(function(plugin){return Object.isUndefined(required)||required&&this.pluginsRequired.get(plugin.key)||!required&&!this.pluginsRequired.get(plugin.key)},this)},sort:function(){log.info("Plugins:: Tri des plugins"),this.plugins=this.plugins.sortBy(function(plugin){return plugin.order})},checkRequired:function(){log.info("Plugins:: Vérification des plugins requis");var error=!1;if(this.pluginsRequired.keys().each(function(plugin){this.pluginsLoaded.get(plugin)||(log.error("Plugin::checkRequired => plugin "+plugin+" missing"),error=!0)},this),error)throw"Plugins manquant"},doParserDateAndPlaceGroupHelper:function(key,me,data){this.plugin[me.key]=GedcomParser.getChilds(data,key).collect(function(o){return GedcomParser.extractDateAndPlace(o)},this)},doParserDateAndPlaceHelper:function(key,me,data){this.plugin[me.key]=GedcomParser.extractDateAndPlace(GedcomParser.getChild(data,key))},displayNotes:function(notes){return GedcomPlugins.displayData(notes,function(n){return n.match(new RegExp("@N[0-9]+@"))?parser.getData(n).text.replace(new RegExp("\n","g"),"<br/>"):n})},displaySources:function(notes){return GedcomPlugins.displayData(notes,function(n){if(n.match(new RegExp("@.+@"))){var o=parser.getData(n),s=[];return o.title&&s.push("<b>"+GedcomLang.$.plugins.helper.source.title+" :</b> "+o.title),o.abbr&&s.push("<b>"+GedcomLang.$.plugins.helper.source.titleAbbr+" :</b> "+o.abbr),o.auth&&s.push("<b>"+GedcomLang.$.plugins.helper.source.author+" :</b> "+o.auth),o.publ&&s.push("<b>"+GedcomLang.$.plugins.helper.source.dateAndPlace+" :</b> "+o.publ),o.text&&s.push("<b>"+GedcomLang.$.plugins.helper.source.text+" :</b> "+o.text),o.notes&&o.notes.length>0&&s.push("<b>"+GedcomLang.$.plugins.helper.source.notes+" :</b> <span class='childs'>"+GedcomPlugins.displayNotes(o.notes)+"</span>"),s.join("<br/>")}return n})},displayDateAndPlace:function(n){if(null==n)return null;var fn=function(n){var shtml=[];if(n.value){switch(n.value){case"Y":shtml.push(GedcomLang.$.common.yes);break;case"N":shtml.push(GedcomLang.$.common.no);break;default:shtml.push(n.value)}shtml.push("<br/>")}return n.date&&shtml.push(GedcomLang.$.common.when+" "+n.date),n.age&&shtml.push("("+GedcomLang.$.plugins.helper.dateAndPlace.age+" "+n.age+")"),n.place&&shtml.push(GedcomLang.$.common.where+" "+GedcomPlugins.displayLocation(n.place,!0)),n.address&&shtml.push("<div style='margin-top:5px;'><b>"+GedcomLang.$.plugins.helper.dateAndPlace.address+" :</b><br/>"+GedcomPlugins.displayLocation(n.address,!1))+"</div>",n.source&&shtml.push("<div style='margin-top:5px;'><b>"+GedcomLang.$.plugins.helper.dateAndPlace.source+" :</b>"+parser.getData(n.source).text)+"</div>",n.notes&&n.notes.length>0&&shtml.push("<div style='margin-top:5px;'><b>"+GedcomLang.$.plugins.helper.dateAndPlace.notes+" :</b><div class='childs'>"+GedcomPlugins.displayNotes(n.notes)+"</div></div>"),shtml.join(" ")}.bind(this);return GedcomPlugins.displayData(n,fn)},displayLocation:function(s,linkInline){var id=GedcomToolbox.id("address"),html=[];return html.push("<span id='"+id+"'>"+s+"</span>"),GedcomConst.SHOW_GEOLOC&&(html.push(linkInline?" ":"<br/>"),html.push('<a href="javascript:void(0);" onclick="GedcomToolbox.displayAddress(\''+id+'\');" id="mapLink'+id+'">'+GedcomLang.$.plugins.helper.dateAndPlace.displayMap+"</a>"),html.push('<iframe id="map'+id+'" style="display:none;width:100%;height:400px;"></iframe>'),html.push(linkInline?" ":"<br/>")),html.join("")},displayData:function(n,fn){return fn=fn?fn:function(o){return o},Object.isArray(n)?0==n.length?null:(n=n.compact(),n.length>1?"<ul>"+$A(n).collect(function(o){return"<li>"+fn(o)+"</li>"},this).join("")+"</ul>":fn(n[0])):fn(n)}},Plugin=Class.create();Plugin.prototype={key:null,name:null,order:5e3,active:!0,initialize:function(data){try{Object.extend(this,data),this.name=GedcomLang.$.plugins[this.key]&&GedcomLang.$.plugins[this.key].title||this.key,GedcomPlugins.addPlugin(this)}catch(e){log.error("Plugin::initialize",e)}},parser:function(p,data){try{Object.isFunction(this.doParser)&&this.doParser.call(p,this,data)}catch(e){log.error("Plugin::"+this.key+"::parser",e)}},writer:function(data,scope){try{return Object.isFunction(this.doWriter)?this.doWriter.call(this,data,scope):data.plugin[this.key]}catch(e){log.error("Plugin::"+this.key+"::writer",e)}},inject:function(p,parser){try{Object.isFunction(this.doInject)&&this.doInject.call(p,this,parser)}catch(e){log.error("Plugin::"+this.key+"::inject",e)}}},new Plugin({order:50,key:"privacy",doParser:function(me,data){this.plugin[me.key]=GedcomParser.getChild(data,"RESN",!0)}}),new Plugin({order:1e3,key:"sexe",doParser:function(me,data){this.plugin[me.key]=GedcomParser.getChild(data,"SEX",!0)}}),new Plugin({order:1050,key:"name",doParser:function(me,data){let prop=GedcomParser.getChilds(data,"NAME",!0);prop.forEach((elem,i)=>{prop[i]=elem.replace(/[\/\\]/g,"")}),this.plugin[me.key]=prop}}),new Plugin({order:1100,key:"prenom",doParser:function(me,data){this.plugin[me.key]=GedcomParser.getChild(GedcomParser.getChild(data,"NAME"),"GIVN",!0)}}),new Plugin({order:1150,key:"surn_prefix",doParser:function(me,data){this.plugin[me.key]=GedcomParser.getChild(GedcomParser.getChild(data,"NAME"),"SPFX",!0)}}),new Plugin({order:1200,key:"nomjf",doParser:function(me,data){this.plugin[me.key]=GedcomParser.getChild(GedcomParser.getChild(data,"NAME"),"SURN",!0)}}),new Plugin({order:1250,key:"name_suffix",doParser:function(me,data){this.plugin[me.key]=GedcomParser.getChild(GedcomParser.getChild(data,"NAME"),"NSFX",!0)}}),new Plugin({order:1300,key:"nom",doParser:function(me,data){this.plugin[me.key]=GedcomParser.getChild(GedcomParser.getChild(data,"NAME"),"_MARNM",!0)}}),new Plugin({order:1350,key:"nickname",doParser:function(me,data){this.plugin[me.key]=GedcomParser.getChild(GedcomParser.getChild(data,"NAME"),"NICK",!0)}}),new Plugin({order:1400,key:"birt",doParser:GedcomPlugins.doParserDateAndPlaceHelper.curry("BIRT")}),new Plugin({order:1450,key:"deat",doParser:GedcomPlugins.doParserDateAndPlaceHelper.curry("DEAT")}),new Plugin({order:1500,key:"burri",doParser:GedcomPlugins.doParserDateAndPlaceHelper.curry("BURRI")}),new Plugin({order:1550,key:"crem",doParser:GedcomPlugins.doParserDateAndPlaceHelper.curry("CREM")}),new Plugin({order:1600,key:"prob",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("PROB")}),new Plugin({order:1650,key:"will",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("WILL")}),new Plugin({order:2e3,key:"familleParent",doParser:function(me,data){this.plugin[me.key]=GedcomParser.getChild(data,"FAMC",!0)},doInject:function(me,parser){this.plugin[me.key]&&(this.plugin[me.key]=parser.getData(this.plugin[me.key]))}}),new Plugin({order:2050,key:"adop",doParser:GedcomPlugins.doParserDateAndPlaceHelper.curry("ADOP")}),new Plugin({order:2100,key:"nmr",doParser:GedcomPlugins.doParserDateAndPlaceHelper.curry("NMR")}),new Plugin({order:2150,key:"familles",doParser:function(me,data){this.plugin[me.key]=GedcomParser.getChilds(data,"FAMS",!0)},doInject:function(me,parser){this.plugin[me.key]&&(this.plugin[me.key]=this.plugin[me.key].collect(function(famille){return parser.getData(famille)},this))}}),new Plugin({order:2200,key:"familleParentChilds"}),new Plugin({order:2250,key:"nchi",doParser:GedcomPlugins.doParserDateAndPlaceHelper.curry("NCHI")}),new Plugin({order:3e3,key:"even",doParser:function(me,data){var d=[];GedcomParser.getChilds(data,"EVEN").each(function(event){var t=GedcomParser.extractDateAndPlace(event);t&&(t.type=GedcomParser.getChild(event,"TYPE",!0),d.push(t))},this),this.plugin[me.key]=d}}),new Plugin({order:3050,key:"dscr",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("DSCR")}),new Plugin({order:3100,key:"cens",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("CENS")}),new Plugin({order:4e3,key:"ssn",doParser:function(me,data){this.plugin[me.key]=GedcomParser.getChilds(data,"SSN",!0)}}),new Plugin({order:4050,key:"resi",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("RESI")}),new Plugin({order:4100,key:"prop",doParser:GedcomPlugins.doParserDateAndPlaceHelper.curry("PROP")}),new Plugin({order:5e3,key:"grad",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("GRAD")}),new Plugin({order:5050,key:"educ",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("EDUC")}),new Plugin({order:5100,key:"occu",doParser:function(me,data){var d=[];GedcomParser.getChilds(data,"OCCU").each(function(occu){var t=GedcomParser.extractDateAndPlace(occu);t&&(t.type=occu.value,d.push(t))},this),this.plugin[me.key]=d}}),new Plugin({order:5150,key:"reti",doParser:GedcomPlugins.doParserDateAndPlaceHelper.curry("RETI")}),new Plugin({order:6e3,key:"nati",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("NATI")}),new Plugin({order:6050,key:"emig",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("EMIG")}),new Plugin({order:6100,key:"immi",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("IMMI")}),new Plugin({order:6150,key:"natu",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("NATU")}),new Plugin({order:7e3,key:"reli",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("RELI")}),new Plugin({order:7050,key:"fcom",doParser:GedcomPlugins.doParserDateAndPlaceHelper.curry("FCOM")}),new Plugin({order:7100,key:"chr",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("CHR")}),new Plugin({order:7150,key:"chra",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("CHRA")}),new Plugin({order:7200,key:"bapt",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("BAPT")}),new Plugin({order:7250,key:"conf",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("CONF")}),new Plugin({order:7300,key:"bles",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("BLES")}),new Plugin({order:7350,key:"ordi",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("ORDI")}),new Plugin({order:7400,key:"ordn",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("ORDN")}),new Plugin({order:8e3,key:"barm",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("BARM")}),new Plugin({order:8050,key:"bars",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("BASM")}),new Plugin({order:9e3,key:"bapl",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("BAPL")}),new Plugin({order:9050,key:"conl",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("CONL")}),new Plugin({order:9100,key:"endl",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("ENDL")}),new Plugin({order:9150,key:"slgc",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("SLGC")}),new Plugin({order:9200,key:"slgs",doParser:GedcomPlugins.doParserDateAndPlaceGroupHelper.curry("SLGS")}),new Plugin({order:1e4,key:"cast",doParser:GedcomPlugins.doParserDateAndPlaceHelper.curry("CAST")}),new Plugin({order:10050,key:"titl",doParser:GedcomPlugins.doParserDateAndPlaceHelper.curry("TITL")}),new Plugin({order:2e4,key:"sources",doParser:function(me,data){this.plugin[me.key]=GedcomParser.getChilds(data,"SOUR",!0)}}),new Plugin({order:20050,key:"notes",doParser:function(me,data){this.plugin[me.key]=GedcomParser.getChilds(data,"NOTE",!0)}}),new Plugin({order:20100,key:"obje",doParser:function(me,data){var d=[];GedcomParser.getChilds(data,"OBJE").each(function(n){n.value||d.push({form:GedcomParser.getChild(n,"FORM",!0),title:GedcomParser.getChild(n,"TITL",!0),file:GedcomParser.getChild(n,"FILE",!0)})},this),this.plugin[me.key]=d}}),GedcomPlugins.setRequired("deat"),GedcomPlugins.setRequired("privacy"),GedcomPlugins.setRequired("sexe"),GedcomPlugins.setRequired("name"),GedcomPlugins.setRequired("birt"),GedcomPlugins.setRequired("familles"),GedcomPlugins.setRequired("familleParent"),GedcomPlugins.setRequired("sexe");var Personne=Class.create();Personne.prototype={type:GedcomConst.indicator.personne,data:null,id:null,fixedID:null,plugin:null,pluginsLoaded:!1,getValue:function(key){return this.plugin[key]},inject:function(parser){GedcomPlugins.getPlugins(!0).each(function(plugin){Object.isFunction(plugin.inject)&&plugin.inject(this,parser)},this)},initialize:function(data){this.plugin={},this.id=data.type,this.fixedID=this.id.replace(/[\@]/g,""),this.data=data;try{this.loadPlugins(data,!0)}catch(e){log.error("Parser::Personne::initialize -> id:"+this.id,e)}},loadPlugins:function(data,required){this.pluginsLoaded||(GedcomPlugins.getPlugins(required).each(function(plugin){plugin.parser(this,data)},this),required||(this.pluginsLoaded=!0))},isDead:function(){return!!this.getValue("deat")},isPublic:function(){return!!GedcomConst.SHOW_PRIVATE_RECORD||"privacy"!=this.getValue("privacy")},getBoxText:function(defaultTxtAttr,navigation){var lines=[];return lines.push({key:"name",txt:this.getDisplayName("\n"),attrs:Object.extend({"font-weight":"bold"},defaultTxtAttr)}),lines.push({key:"dates",txt:this.getDisplayDate(),attrs:defaultTxtAttr}),lines},getDisplayName:function(nameJoiner){try{var txt=[];if(this.isPublic()){if(this.getValue("sexe"))switch(this.getValue("sexe")){case"M":txt.push(GedcomLang.$.personne.sexe.M);break;case"F":txt.push(GedcomLang.$.personne.sexe.F)}this.getValue("name").length>0&&txt.push(this.getValue("name").join(nameJoiner))}else txt.push("- "+GedcomLang.$.personne.privacy+" -");return txt.join(" ")}catch(e){log.error("Parser::getDisplayName",e)}},getDisplayDate:function(){try{return this.isPublic()&&(this.getValue("birt")||this.getValue("deat"))?[this.getValue("birt")&&this.getValue("birt").date||"",this.getValue("deat")&&this.getValue("deat").date||""].join(" - "):null}catch(e){log.error("Parser::getDisplayDate",e)}}};var Famille=Class.create();Famille.prototype={type:GedcomConst.indicator.famille,name:null,id:null,fixedID:null,husb:null,wife:null,marr:null,childs:null,initialize:function(data){try{this.id=data.type,this.fixedID=this.id.replace(/[\@]/g,""),this.husb=GedcomParser.getChild(data,"HUSB",!0),this.wife=GedcomParser.getChild(data,"WIFE",!0),this.marr=GedcomParser.extractDateAndPlace(GedcomParser.getChild(data,"MARR")),this.childs=GedcomParser.getChilds(data,"CHIL",!0)}catch(e){log.error("Parser::Famille::initialize -> id:"+this.id,e)}},inject:function(parser){this.husb&&(this.husb=parser.getData(this.husb)),this.wife&&(this.wife=parser.getData(this.wife)),this.childs=this.childs.collect(function(child){return parser.getData(child)},this),this.husb?this.name=this.husb.plugin.name[this.husb.plugin.name.length-1]:this.wife&&(this.name=this.wife.plugin.name[this.wife.plugin.name.length-1])}};var Source=Class.create();Source.prototype={type:GedcomConst.indicator.source,id:null,fixedID:null,title:null,abbr:null,auth:null,publ:null,text:null,notes:null,initialize:function(data){try{this.id=data.type,this.fixedID=this.id.replace(/[\@]/g,""),this.title=GedcomParser.getChild(data,"TITL",!0),this.abbr=GedcomParser.getChild(data,"ABBR",!0),this.auth=GedcomParser.getChild(data,"AUTH",!0),this.publ=GedcomParser.getChild(data,"PUBL",!0),this.text=GedcomParser.getChild(data,"TEXT",!0),this.notes=GedcomParser.getChilds(data,"NOTE",!0)}catch(e){log.error("Parser::Source::initialize -> id:"+this.id,e)}}};var Note=Class.create();Note.prototype={type:GedcomConst.indicator.note,id:null,fixedID:null,text:null,initialize:function(data){try{this.id=data.type,this.fixedID=this.id.replace(/[\@]/g,""),this.text=data.text}catch(e){log.error("Parser::Note::initialize -> id:"+this.id,e)}}};