/* Requerido para transicion suave de colores en proceso de conversion */
body.converting .bg-tone {    
    transition: background-color 4s ease;
}

.page[role="converting"] {
    @include full-absolute;

    main {
        @include center-absolute;
        width: 60%;
        text-align: center;

        img {
            width: 6.4rem;
            height: 6.4rem;
        }

        h1, h2, p { margin: unset; }
        h1 { font-size: 2.4rem; }
        h2 { font-size: 1.4rem; }

        .title[role="wrapper"] {
            div {display: none;}
            div.default {display: block;}
        }

        .progress[role="wrapper"] {
            width: 100%;

            progress {
                width: 85%;
                height: 1rem;
            }

            .set {
                margin-left: -0.3rem;
                padding: 1.4rem 1.6rem;
                vertical-align: -10%;
                font-size: 1.2rem;
                background-color: transparent;
                border: 1px solid #888;
                border-radius: 10rem;
                color: #555;

                &:hover { background-color: #aaa; }
                &:active { background-color: #888; color: #ddd}
            }
        }     
    }
    
    footer {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        text-align: center;

        button {
            margin: 0 1rem;
            display: none;

            &.cancel {display: inline-block;}
        }
    }

    /* UI en cambios de estado */
    &.cancel {
        .progress[role="wrapper"] {display: none;}

        .title[role="wrapper"] {
            // Si estamos en pausa, aun podemos cancelar.
            // En este caso se mostraran ambos titulos que no es lo deseado.
            // Asi que recurrimos a important para forzar a paused para no ser mostrado.
            .default, .paused {display: none !important;} 
            .cancel {display: block;}        
        }

        footer {
            .cancel { display: none; }
            .retry { display: inline-block; }
            .process { display: inline-block; }
        }
    }

    &.paused {
        .title[role="wrapper"] {
            .default {display: none;}
            .paused {display: block;}
        }
    }

    &.error {
        .progress[role="wrapper"] {display: none;}

        .title[role="wrapper"] {
            .default {display: none;}
            .error {display: block;}        
        }

        footer {
            .cancel { display: none; }
            .retry { display: inline-block; }
            .process { display: inline-block; }
        }
    }

    &.success {
        .progress[role="wrapper"] {display: none;}

        .title[role="wrapper"] {
            .default {display: none;}
            .success {display: block;}
        }

        footer {
            .cancel { display: none; }
            .process { display: inline-block; }
            .show-output { display: inline-block; }
        }
    }
}